program Sort {

    // An implementation of bubble sort.

    void sort(int[] a, int n) {

        int swaps = 0;

        void swap(int i, int j) {
            int temp = a[i];
            a[i] = a[j];
            a[j] = temp;
            sort.swaps += 1;
        }

        int i = 0;
        while (i < n) {
            boolean isSorted = true;
            int j = 0;
            while (j < n-1-i) {
                if (a[j+1] < a[j]) {
                    swap(a, j, j+1);
                    isSorted = false;
                }
                j += 1;
            }
            if (isSorted) return;
            i += 1;
        }
    }

    boolean isSorted(int[] a, int n) {
        int i = 1;
        while (i < n) {
            if (a[i-1] > a[i]) return false;
            i += 1;
        }
        return true;
    }

    int seed = 12345;
    int K = 17;
    int C = 3;
    int M = 32707;

    int random() {
        return seed = ((K * seed + C) % M)
    }

    void initialize(int[] a, int n) {
        int i = 0;
        while (i < n) {
            a[i] = random();
            i += 1;
        }
    }


    int N = 10;
    int[N] a;
    initialize(a, N);
    sort(a, N);
    if (isSorted(a, N)) {
        out('Y');
    } else {
        out('N');
    }
}